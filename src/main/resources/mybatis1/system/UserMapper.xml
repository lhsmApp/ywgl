<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<resultMap type="User" id="userAndRoleResultMap">
		<id column="USER_ID" property="USER_ID"/>
		<result column="USERNAME" property="USERNAME"/>
		<result column="PASSWORD" property="PASSWORD"/>
		<result column="NAME" property="NAME"/>
		<result column="RIGHTS" property="RIGHTS"/>
		<result column="LAST_LOGIN" property="LAST_LOGIN"/>
		<result column="IP" property="IP"/>
		<result column="STATUS" property="STATUS"/>
		<result column="SKIN" property="SKIN"/>
		<result column="DEPARTMENT_ID" property="DEPARTMENT_ID"/>
		<result column="DEPARTMENT_NAME" property="DEPARTMENT_NAME"/>
		<result column="UNIT_CODE" property="UNIT_CODE"/>
		<result column="UNIT_NAME" property="UNIT_NAME"/>
		<association property="role" column="ROLE_ID" javaType="Role">
			<id column="ROLE_ID" property="ROLE_ID"/>
			<result column="ROLE_NAME" property="ROLE_NAME"/>
			<result column="ROLE_RIGHTS" property="RIGHTS"/>
		</association>
	</resultMap>
	<resultMap type="User" id="userResultMap">
		<id column="USER_ID" property="USER_ID"/>
		<result column="USERNAME" property="USERNAME"/>
		<result column="PASSWORD" property="PASSWORD"/>
		<result column="NAME" property="NAME"/>
		<result column="RIGHTS" property="RIGHTS"/>
		<result column="LAST_LOGIN" property="LAST_LOGIN"/>
		<result column="IP" property="IP"/>
		<result column="STATUS" property="STATUS"/>
		<result column="ROLE_ID" property="ROLE_ID"/>
		<result column="DEPARTMENT_ID" property="DEPARTMENT_ID"/>
		<result column="SKIN" property="SKIN"/>
		<result column="DEPARTMENT_ID" property="DEPARTMENT_ID"/>
		<result column="DEPARTMENT_NAME" property="DEPARTMENT_NAME"/>
		<result column="UNIT_CODE" property="UNIT_CODE"/>
		<result column="UNIT_NAME" property="UNIT_NAME"/>
	</resultMap>
	
	<!--表名 -->
	<sql id="tableName">
		SYS_USER
	</sql>
	<sql id="roleTableName">
		SYS_ROLE
	</sql>
	<sql id="staffTableName">
		OA_STAFF
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		DEPARTMENT_ID,
		UNIT_CODE,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		SKIN,
		EMAIL,
		NUMBER,
		PHONE
	</sql>
	
	<!-- 字段 -->
	<sql id="FieldInsert">
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		DEPARTMENT_ID,
		UNIT_CODE,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		SKIN,
		EMAIL,
		NUMBER,
		PHONE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{DEPARTMENT_ID},
		#{UNIT_CODE},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{SKIN},
		#{EMAIL},
		#{NUMBER},
		#{PHONE}
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValueInsert">
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{DEPARTMENT_ID},
		#{UNIT_CODE},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{SKIN},
		#{EMAIL},
		#{NUMBER},
		#{PHONE}
	</sql>
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultType="pd">
		select <include refid="Field"></include> from
		<include refid="tableName"></include>
		<where>
			STATUS='1'
			<if test="USERNAME!=null and PASSWORD!=null">
			and USERNAME = #{USERNAME} and PASSWORD=#{PASSWORD}
			</if>
			<if test="USER_ID!=null and USER_ID>0">
			and USER_ID = #{USER_ID}
			</if>
		</where>
	</select>
	
	<!-- 判断用户名和密码 -->
	<select id="getStudentInfo" parameterType="pd" resultType="pd">
		select * from tb_train_student 
		<where>
			STATE='1'
			<if test="STUDENT_CODE!=null and PASSWORD!=null">
				and STUDENT_CODE = #{STUDENT_CODE} and PASSWORD=#{PASSWORD}
			</if>
		</where>
	</select>
	
	<!-- 判断用户名和密码,手机端需要返回单位名称、部门名称、角色名称等 -->
	<select id="getUserInfoOfApp" parameterType="pd" resultType="pd">
		select u.*,depart.NAME DEPARTMENT_NAME,unit.NAME UNIT_NAME,role.ROLE_NAME from
		<include refid="tableName"></include> u
		left join 
		<include refid="roleTableName"></include> role 
		on u.ROLE_ID=role.ROLE_ID 
		left join 
		oa_department depart
		on u.DEPARTMENT_ID=depart.DEPARTMENT_CODE 
		
		left join 
		oa_department unit
		on u.UNIT_CODE=unit.DEPARTMENT_CODE 
		
		<where>
			<if test="USERNAME!=null and PASSWORD!=null">
			and u.USERNAME = #{USERNAME} and u.PASSWORD=#{PASSWORD}
			</if>
			<if test="USER_ID!=null and USER_ID>0">
			and u.USER_ID = #{USER_ID}
			</if>
		</where>
	</select>
	
	<!-- 更新登录时间 -->
	<update id="updateLastLogin" parameterType="pd" >
		update
		<include refid="tableName"></include>
		set 
		LAST_LOGIN = #{LAST_LOGIN} 
		where USER_ID = #{USER_ID}
	</update>
	
	<!-- 通过用户ID获取用户信息和角色信息 -->
	<select id="getUserAndRoleById" parameterType="String" resultMap="userAndRoleResultMap">
		select  u.USER_ID,
				u.USERNAME,
				u.NAME,
				u.RIGHTS as USER_RIGHTS,
				u.PASSWORD,
				u.SKIN,
				r.ROLE_ID,
				r.ROLE_NAME,
				r.RIGHTS as ROLE_RIGHTS,
				d.NAME DEPARTMENT_NAME,
				u.DEPARTMENT_ID,
				
				e.NAME UNIT_NAME,
				u.UNIT_CODE,
				u.STATUS,
				u.BZ  
		from 
		<include refid="tableName"></include> u 
		left join 
		<include refid="roleTableName"></include> r 
		on u.ROLE_ID=r.ROLE_ID 
		left join 
		oa_department d
		on u.DEPARTMENT_ID=d.DEPARTMENT_CODE 
		
		left join 
		oa_department e
		on u.UNIT_CODE=e.DEPARTMENT_CODE 
		where u.STATUS=1 
		and u.USER_ID=#{USER_ID}
	</select>
	
	<!-- 通过用户ID获取学员信息和角色信息 -->
	<select id="getStudentAndRoleById" parameterType="String" resultMap="userAndRoleResultMap">
		select  u.STUDENT_ID USER_ID,
				u.STUDENT_CODE USERNAME,
				u.STUDENT_NAME NAME,
				
				u.PASSWORD,
				r.ROLE_ID,
				r.ROLE_NAME,
				r.RIGHTS as ROLE_RIGHTS,
				d.NAME DEPARTMENT_NAME,
				u.DEPART_CODE DEPARTMENT_ID,
				
				e.NAME UNIT_NAME,
				u.UNIT_CODE,
				u.STATE STATUS,
				u.MEMO BZ  
		from 
		tb_train_student u 
		left join 
		<include refid="roleTableName"></include> r 
		on u.ROLE_ID=r.ROLE_ID 
		left join 
		oa_department d
		on u.DEPART_CODE=d.DEPARTMENT_CODE 
		
		left join 
		oa_department e
		on u.UNIT_CODE=e.DEPARTMENT_CODE 
		where u.STATE=1 
		and u.STUDENT_ID=#{USER_ID}
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USERNAME = #{USERNAME}
		<if test="USER_ID != null and USER_ID != ''">
			and USER_ID != #{USER_ID} 
		</if>
	</select>
	
	<!-- 通过StudentCode获取数据 -->
	<select id="findByStudentCode" parameterType="pd" resultType="pd" >
		select STUDENT_ID USER_ID,
		STUDENT_CODE USERNAME,
		PASSWORD,
		STUDENT_NAME NAME,
		ROLE_ID,
		DEPART_CODE DEPARTMENT_ID,
		UNIT_CODE,
		STATE STATUS,
		MEMO BZ
		from tb_train_student
		where 
			STUDENT_CODE = #{USERNAME}
	</select>
	
	<!-- 存入IP -->
	<update id="saveIP" parameterType="pd" >
		update 
		<include refid="tableName"></include> 
		set 
			IP = #{IP}
		where 
			USERNAME = #{USERNAME}
	</update>
	
	<!-- 列出某角色下的所有用户 -->
	<select id="listAllUserByRoldId"  parameterType="pd" resultType="pd" >
		select USER_ID
		from 
		<include refid="tableName"></include>
		where 
		ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 用户列表 -->
	<select id="userlistPage" parameterType="page" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				u.STATUS,
				u.BZ,
				r.ROLE_ID,
				r.ROLE_NAME,
				u.DEPARTMENT_ID,
				d.NAME DEPARTMENT_NAME,
				u.UNIT_CODE,
				e.NAME UNIT_NAME
		from <include refid="tableName"></include> u 
		left join
		<include refid="roleTableName"></include> r 
		on u.ROLE_ID = r.ROLE_ID 
		left join
		oa_department d 
		on u.DEPARTMENT_ID = d.DEPARTMENT_CODE 
		
		left join
		oa_department e 
		on u.UNIT_CODE = e.DEPARTMENT_CODE 
		<where>
			and u.USERNAME != 'admin'
			and r.PARENT_ID = '1'
			
			<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
				and
					(
						 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
						 or 
						 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
						 or
						 u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
						 or
						 u.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
						 or
						 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					)
			</if>
			<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
				and u.ROLE_ID=#{pd.ROLE_ID} 
			</if>
			<if test="pd.UNIT_CODE != null and pd.UNIT_CODE != ''"><!-- 单位检索 -->
				and u.UNIT_CODE=#{pd.UNIT_CODE} 
			</if>
			<!-- <if test="pd.DEPARTMENT_ID != null and pd.DEPARTMENT_ID != ''">部门检索
				and u.DEPARTMENT_ID=#{pd.DEPARTMENT_ID} 
			</if> -->
			<if test="pd.STATUS != null and pd.STATUS != ''"><!-- 状态检索 -->
				and u.STATUS=#{pd.STATUS} 
			</if>
			<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
				and u.LAST_LOGIN &gt;= #{pd.lastLoginStart} 
			</if>
			<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
				and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd} 
			</if>
		</where>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 用户列表(弹窗选择用) -->
	<select id="userBystafflistPage" parameterType="page" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				u.STATUS,
				u.BZ,
				r.ROLE_ID,
				r.ROLE_NAME
		from <include refid="tableName"></include> u, <include refid="roleTableName"></include> r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and r.PARENT_ID = '1'
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{pd.ROLE_ID} 
		</if>
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{pd.lastLoginEnd} 
		</if>
		and u.USERNAME not in (select s.USER_ID from <include refid="staffTableName"></include> s where s.USER_ID !='')
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过user_id获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
	</select>
	
	<!-- 新增用户 -->
	<insert id="saveU" parameterType="pd" >
		insert into <include refid="tableName"></include> (
			<include refid="FieldInsert"></include>
		) values (
			<include refid="FieldValueInsert"></include>
		)
	</insert>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd" >
		update  <include refid="tableName"></include>
			set NAME 					= #{NAME},
				ROLE_ID 				= #{ROLE_ID},
				DEPARTMENT_ID 				= #{DEPARTMENT_ID},
				UNIT_CODE 				= #{UNIT_CODE},
				BZ						= #{BZ},
				EMAIL					= #{EMAIL},
				NUMBER					= #{NUMBER},
				PHONE					= #{PHONE},
				STATUS					= #{STATUS}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 修改 -->
	<update id="editUMy" parameterType="pd" >
		update  <include refid="tableName"></include>
			set NAME 					= #{NAME},
				PHONE					= #{PHONE}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 修改 -->
	<update id="editStudentMy" parameterType="pd" >
		update  tb_train_student 
			set PASSWORD= #{PASSWORD}
			where 
				STUDENT_ID = #{USER_ID}
	</update>
	
	<!-- 修改 状态-->
	<update id="editState" parameterType="pd" >
		update  <include refid="tableName"></include>
			set STATUS = #{STATUS }
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from <include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
		and 
				USER_ID != '1'
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String" >
		delete from <include refid="tableName"></include>
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
            and 
				USER_ID != '1'
	</delete>
	
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd" >
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				u.STATUS,
				u.BZ,
				r.ROLE_ID,
				r.ROLE_NAME,
				u.DEPARTMENT_ID,
				d.NAME DEPARTMENT_NAME,
				u.UNIT_CODE,
				e.NAME UNIT_NAME
		from <include refid="tableName"></include> u 
		left join
		<include refid="roleTableName"></include> r 
		on u.ROLE_ID = r.ROLE_ID 
		left join
		oa_department d 
		on u.DEPARTMENT_ID = d.DEPARTMENT_CODE 
		
		left join
		oa_department e 
		on u.UNIT_CODE = e.DEPARTMENT_CODE 
		<where> 
			and u.USERNAME != 'admin'
			and r.PARENT_ID = '1'
			<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
				and
					(
						 u.USERNAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
						 or 
						 u.EMAIL LIKE CONCAT(CONCAT('%', #{keywords}),'%') 
						 or
						 u.NUMBER LIKE CONCAT(CONCAT('%', #{keywords}),'%')
						 or
						 u.NAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
						 or
						 u.PHONE LIKE CONCAT(CONCAT('%', #{keywords}),'%')
					)
			</if>
			<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
				and u.ROLE_ID=#{ROLE_ID} 
			</if>
			<if test="UNIT_CODE != null and UNIT_CODE != ''"><!-- 单位检索 -->
				and u.UNIT_CODE=#{UNIT_CODE} 
			</if>
			<if test="DEPARTMENT_ID != null and DEPARTMENT_ID != ''"><!-- 部门检索 -->
				and u.DEPARTMENT_ID=#{DEPARTMENT_ID} 
			</if>
			<if test="STATUS != null and STATUS != ''"><!-- 状态检索 -->
				and u.STATUS=#{STATUS} 
			</if>
			<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
				and u.LAST_LOGIN &gt;= #{lastLoginStart} 
			</if>
			<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
				and u.LAST_LOGIN &lt;= #{lastLoginEnd} 
			</if>
		</where>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 获取总数 -->
	<select id="getUserCount" parameterType="String" resultType="pd">
		select 
			count(USER_ID) userCount
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 获取用户信息-->
	<select id="getUserValue" parameterType="pd" resultType="pd" >
		select A.* from <include refid="tableName"></include> A
		left join sys_role B
		on A.ROLE_ID=B.ROLE_ID
		<where> 
			<if test="UNIT_CODE != null and UNIT_CODE != ''"><!-- 状态检索 -->
				and A.UNIT_CODE=#{UNIT_CODE} 
			</if>
			<!-- <if test="ROLE_ID != null and ROLE_ID != ''">状态检索
				and ROLE_ID in (${ROLE_ID}) 
			</if> -->
			<if test="STATUS != null and STATUS != ''"><!-- 状态检索 -->
				and A.STATUS=#{STATUS} 
			</if>
			<if test="CONDITION != null and CONDITION != ''"><!-- 其它条件检索 -->
				${CONDITION} 
			</if>
		</where>
	</select>
		
	<!-- 通过单位获取用户信息-->
	<select id="getUserByUnitCode" parameterType="pd" resultType="pd" >
		select * from <include refid="tableName"></include>
		WHERE
		UNIT_CODE=#{UNIT_CODE}
		
	</select>
</mapper>