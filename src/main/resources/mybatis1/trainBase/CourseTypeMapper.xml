<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CourseTypeMapper">
	
	<resultMap type="CourseType" id="coursetypeResultMap">
		<id column="COURSE_TYPE_ID" property="COURSETYPE_ID"/>
		<result column="COURSE_TYPE_NAME" property="NAME"/>
		<result column="COURSE_TYPE_PARENT_ID" property="PARENT_ID"/>
	</resultMap>
	
	<!--表名 -->
	<sql id="tableName">
		tb_course_type
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		COURSE_TYPE_ID,	
		COURSE_TYPE_NAME,	
		LEADER,	
		STATE,	
		COURSE_TYPE_PARENT_ID
	</sql>
	
	<!-- 字段 -->
	<sql id="InsertField">
		COURSE_TYPE_NAME,	
		LEADER,	
		STATE,	
		COURSE_TYPE_PARENT_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{COURSE_TYPE_NAME},	
		#{LEADER},	
		#{STATE},	
		#{COURSE_TYPE_PARENT_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="InsertField"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			COURSE_TYPE_ID = #{COURSETYPE_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			COURSE_TYPE_NAME = #{COURSE_TYPE_NAME},
			LEADER = #{LEADER},
			STATE = #{STATE},
			COURSE_TYPE_PARENT_ID = #{COURSE_TYPE_PARENT_ID}
		where 
		COURSE_TYPE_ID = #{COURSE_TYPE_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			COURSE_TYPE_ID = #{COURSE_TYPE_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		<where>
			<if test="pd.COURSETYPE_ID!= null and pd.COURSETYPE_ID != ''"><!-- 检索 -->
			and COURSE_TYPE_PARENT_ID = #{pd.COURSE_TYPE_ID}
			</if>
			<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
				and
					(
						COURSE_TYPE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					<!--	根据需求自己加检索条件
						字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
						 or 
						字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					-->
					)
			</if>
		</where>
	</select>
	
	<!-- 通过ID获取其子级列表 -->
	<select id="listByParentId" parameterType="String" resultMap="coursetypeResultMap">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			COURSE_TYPE_PARENT_ID = #{parentId} order by COURSE_TYPE_PARENT_ID,COURSE_TYPE_ID 
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 通过ID获取其子级列表 -->
	<select id="listSubCourseTypeByParentId" parameterType="String" resultMap="coursetypeResultMap">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			COURSE_TYPE_PARENT_ID = #{parentId} order by COURSE_TYPE_ID 
	</select>
</mapper>