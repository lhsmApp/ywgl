<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ERPDelAcctApplicationMapper">
	
	<!--表名 -->
	<sql id="tableName">
		tb_di_erp_daa
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		STAFF_CODE,	
		STAFF_NAME,	
		STAFF_UNIT_LEVEL2,	
		STAFF_UNIT_LEVEL3,	
		STAFF_POSITION,	
		STAFF_JOB,	
		STAFF_MODULE,	
		PHONE,	
		MAIL,	
		PERMISSION_CHANGE,	
		APPLY_DATE,	
		ACCOUNT_DELETE_REASON,	
		NOTE,
		STATE
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{STAFF_CODE},	
		#{STAFF_NAME},	
		#{STAFF_UNIT_LEVEL2},	
		#{STAFF_UNIT_LEVEL3},	
		#{STAFF_POSITION},	
		#{STAFF_JOB},	
		#{STAFF_MODULE},	
		#{PHONE},	
		#{MAIL},	
		#{PERMISSION_CHANGE},	
		#{APPLY_DATE},	
		#{ACCOUNT_DELETE_REASON},	
		#{NOTE},	
		#{STATE}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
			<include refid="tableName"></include>
		(
			<include refid="Field"></include>
		) value (
			<include refid="FieldValue"></include>	
		)
	</insert>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STAFF_CODE = #{STAFF_CODE},
			STAFF_NAME = #{STAFF_NAME},
			STAFF_UNIT_LEVEL2 = #{STAFF_UNIT_LEVEL2},
			STAFF_UNIT_LEVEL3 = #{STAFF_UNIT_LEVEL3},
			STAFF_POSITION = #{STAFF_POSITION},
			STAFF_JOB = #{STAFF_JOB},
			STAFF_MODULE = #{STAFF_MODULE},
			PHONE = #{PHONE},
			MAIL = #{MAIL},
			PERMISSION_CHANGE = #{PERMISSION_CHANGE},
			APPLY_DATE = #{APPLY_DATE},
			ACCOUNT_DELETE_REASON = #{ACCOUNT_DELETE_REASON},
			NOTE = #{NOTE}
		where 
		ID = #{ID}
	</update>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			ID,
			STAFF_CODE,	
			STAFF_NAME,	
			STAFF_UNIT_LEVEL2,	
			STAFF_UNIT_LEVEL3,	
			STAFF_POSITION,	
			STAFF_JOB,	
			STAFF_MODULE,	
			PHONE,	
			MAIL,	
			PERMISSION_CHANGE,	
			APPLY_DATE,	
			ACCOUNT_DELETE_REASON,	
			NOTE
		from 
		<include refid="tableName"></include>
		where  STATE=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>

	<!-- 批量删除 -->
	<update id="deleteAll" parameterType="String">
		update
		<include refid="tableName"></include>
		set
			STATE = 0
		where 
			ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</update>
	<!-- *********************导入导出********************************* -->
	<!-- 导出列表 -->
	<select id="exportList" parameterType="Page" resultType="pd">
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			STATE = 1
		order by 
			ID,STAFF_NAME
	</select>
	
	<!-- 更新数据 -->
	<update id="delAndIns" parameterType="pd">
		<foreach item="item" index="index" collection="list" open=" " separator=" " close=" ">
		    delete from <include refid="tableName"></include>
		    where ID = #{item.ID};
	        insert into 
	        <include refid="tableName"></include>
		    ( 
				<include refid="Field"></include>
			) values (
				#{item.STAFF_CODE},	
				#{item.STAFF_NAME},	
				#{item.STAFF_UNIT_LEVEL2},	
				#{item.STAFF_UNIT_LEVEL3},	
				#{item.STAFF_POSITION},	
				#{item.STAFF_JOB},	
				#{item.STAFF_MODULE},	
				#{item.PHONE},	
				#{item.MAIL},	
				#{item.PERMISSION_CHANGE},	
				#{item.APPLY_DATE},	
				#{item.ACCOUNT_DELETE_REASON},	
				#{item.NOTE},	
				"1"
			);
		</foreach>
	</update>
	
	<!-- 导出模板 -->
	<select id="exportModel" parameterType="pd" resultType="pd">
		select 
			<include refid="Field"></include> 
		from 
			<include refid="tableName"></include>
		where 
			STATE = 1 
		limit 1
	</select>
</mapper>